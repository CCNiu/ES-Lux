#ifndef BITMAP_H
#define BITMAP_H

/* This library was imported from the following link:
 * https://github.com/dhepper/font8x8/blob/master/font8x8_basic.h
 * The character 'A' (0x41 / 65) is encoded as
 * { 0x0C, 0x1E, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x00}

 *     0x0C => 0000 1100 => ..XX....
 *     0X1E => 0001 1110 => .XXXX...
 *     0x33 => 0011 0011 => XX..XX..
 *     0x33 => 0011 0011 => XX..XX..
 *     0x3F => 0011 1111 => xxxxxx..
 *     0x33 => 0011 0011 => XX..XX..
 *     0x33 => 0011 0011 => XX..XX..
 *     0x00 => 0000 0000 => ........
 */

const char font8x8_basic[128][8] = {
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0000 (nul)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0001
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0002
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0003
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0004
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0005
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0006
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0007
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0008
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0009
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+000A
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+000B
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+000C
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+000D
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+000E
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+000F
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0010
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0011
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0012
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0013
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0014
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0015
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0016
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0017
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0018
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0019
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+001A
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+001B
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+001C
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+001D
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+001E
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+001F
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0020 (space)
    {0x18, 0x3C, 0x3C, 0x18, 0x18, 0x00, 0x18, 0x00},  // U+0021 (!)
    {0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0022 (")
    {0x36, 0x36, 0x7F, 0x36, 0x7F, 0x36, 0x36, 0x00},  // U+0023 (#)
    {0x0C, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x0C, 0x00},  // U+0024 ($)
    {0x00, 0x63, 0x33, 0x18, 0x0C, 0x66, 0x63, 0x00},  // U+0025 (%)
    {0x1C, 0x36, 0x1C, 0x6E, 0x3B, 0x33, 0x6E, 0x00},  // U+0026 (&)
    {0x06, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0027 (')
    {0x18, 0x0C, 0x06, 0x06, 0x06, 0x0C, 0x18, 0x00},  // U+0028 (()
    {0x06, 0x0C, 0x18, 0x18, 0x18, 0x0C, 0x06, 0x00},  // U+0029 ())
    {0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00},  // U+002A (*)
    {0x00, 0x0C, 0x0C, 0x3F, 0x0C, 0x0C, 0x00, 0x00},  // U+002B (+)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x06},  // U+002C (,)
    {0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00},  // U+002D (-)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x00},  // U+002E (.)
    {0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x00},  // U+002F (/)
    {0x3E, 0x63, 0x73, 0x7B, 0x6F, 0x67, 0x3E, 0x00},  // U+0030 (0)
    {0x0C, 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x3F, 0x00},  // U+0031 (1)
    {0x1E, 0x33, 0x30, 0x1C, 0x06, 0x33, 0x3F, 0x00},  // U+0032 (2)
    {0x1E, 0x33, 0x30, 0x1C, 0x30, 0x33, 0x1E, 0x00},  // U+0033 (3)
    {0x38, 0x3C, 0x36, 0x33, 0x7F, 0x30, 0x78, 0x00},  // U+0034 (4)
    {0x3F, 0x03, 0x1F, 0x30, 0x30, 0x33, 0x1E, 0x00},  // U+0035 (5)
    {0x1C, 0x06, 0x03, 0x1F, 0x33, 0x33, 0x1E, 0x00},  // U+0036 (6)
    {0x3F, 0x33, 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x00},  // U+0037 (7)
    {0x1E, 0x33, 0x33, 0x1E, 0x33, 0x33, 0x1E, 0x00},  // U+0038 (8)
    {0x1E, 0x33, 0x33, 0x3E, 0x30, 0x18, 0x0E, 0x00},  // U+0039 (9)
    {0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x00},  // U+003A (:)
    {0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x06},  // U+003B (;)
    {0x18, 0x0C, 0x06, 0x03, 0x06, 0x0C, 0x18, 0x00},  // U+003C (<)
    {0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00},  // U+003D (=)
    {0x06, 0x0C, 0x18, 0x30, 0x18, 0x0C, 0x06, 0x00},  // U+003E (>)
    {0x1E, 0x33, 0x30, 0x18, 0x0C, 0x00, 0x0C, 0x00},  // U+003F (?)
    {0x3E, 0x63, 0x7B, 0x7B, 0x7B, 0x03, 0x1E, 0x00},  // U+0040 (@)
    {0x0C, 0x1E, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x00},  // U+0041 (A)
    {0x3F, 0x66, 0x66, 0x3E, 0x66, 0x66, 0x3F, 0x00},  // U+0042 (B)
    {0x3C, 0x66, 0x03, 0x03, 0x03, 0x66, 0x3C, 0x00},  // U+0043 (C)
    {0x1F, 0x36, 0x66, 0x66, 0x66, 0x36, 0x1F, 0x00},  // U+0044 (D)
    {0x7F, 0x46, 0x16, 0x1E, 0x16, 0x46, 0x7F, 0x00},  // U+0045 (E)
    {0x7F, 0x46, 0x16, 0x1E, 0x16, 0x06, 0x0F, 0x00},  // U+0046 (F)
    {0x3C, 0x66, 0x03, 0x03, 0x73, 0x66, 0x7C, 0x00},  // U+0047 (G)
    {0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33, 0x00},  // U+0048 (H)
    {0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00},  // U+0049 (I)
    {0x78, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E, 0x00},  // U+004A (J)
    {0x67, 0x66, 0x36, 0x1E, 0x36, 0x66, 0x67, 0x00},  // U+004B (K)
    {0x0F, 0x06, 0x06, 0x06, 0x46, 0x66, 0x7F, 0x00},  // U+004C (L)
    {0x63, 0x77, 0x7F, 0x7F, 0x6B, 0x63, 0x63, 0x00},  // U+004D (M)
    {0x63, 0x67, 0x6F, 0x7B, 0x73, 0x63, 0x63, 0x00},  // U+004E (N)
    {0x1C, 0x36, 0x63, 0x63, 0x63, 0x36, 0x1C, 0x00},  // U+004F (O)
    {0x3F, 0x66, 0x66, 0x3E, 0x06, 0x06, 0x0F, 0x00},  // U+0050 (P)
    {0x1E, 0x33, 0x33, 0x33, 0x3B, 0x1E, 0x38, 0x00},  // U+0051 (Q)
    {0x3F, 0x66, 0x66, 0x3E, 0x36, 0x66, 0x67, 0x00},  // U+0052 (R)
    {0x1E, 0x33, 0x07, 0x0E, 0x38, 0x33, 0x1E, 0x00},  // U+0053 (S)
    {0x3F, 0x2D, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00},  // U+0054 (T)
    {0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x3F, 0x00},  // U+0055 (U)
    {0x33, 0x33, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00},  // U+0056 (V)
    {0x63, 0x63, 0x63, 0x6B, 0x7F, 0x77, 0x63, 0x00},  // U+0057 (W)
    {0x63, 0x63, 0x36, 0x1C, 0x1C, 0x36, 0x63, 0x00},  // U+0058 (X)
    {0x33, 0x33, 0x33, 0x1E, 0x0C, 0x0C, 0x1E, 0x00},  // U+0059 (Y)
    {0x7F, 0x63, 0x31, 0x18, 0x4C, 0x66, 0x7F, 0x00},  // U+005A (Z)
    {0x1E, 0x06, 0x06, 0x06, 0x06, 0x06, 0x1E, 0x00},  // U+005B ([)
    {0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x40, 0x00},  // U+005C (\)
    {0x1E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1E, 0x00},  // U+005D (])
    {0x08, 0x1C, 0x36, 0x63, 0x00, 0x00, 0x00, 0x00},  // U+005E (^)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF},  // U+005F (_)
    {0x0C, 0x0C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+0060 (`)
    {0x00, 0x00, 0x1E, 0x30, 0x3E, 0x33, 0x6E, 0x00},  // U+0061 (a)
    {0x07, 0x06, 0x06, 0x3E, 0x66, 0x66, 0x3B, 0x00},  // U+0062 (b)
    {0x00, 0x00, 0x1E, 0x33, 0x03, 0x33, 0x1E, 0x00},  // U+0063 (c)
    {0x38, 0x30, 0x30, 0x3e, 0x33, 0x33, 0x6E, 0x00},  // U+0064 (d)
    {0x00, 0x00, 0x1E, 0x33, 0x3f, 0x03, 0x1E, 0x00},  // U+0065 (e)
    {0x1C, 0x36, 0x06, 0x0f, 0x06, 0x06, 0x0F, 0x00},  // U+0066 (f)
    {0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x1F},  // U+0067 (g)
    {0x07, 0x06, 0x36, 0x6E, 0x66, 0x66, 0x67, 0x00},  // U+0068 (h)
    {0x0C, 0x00, 0x0E, 0x0C, 0x0C, 0x0C, 0x1E, 0x00},  // U+0069 (i)
    {0x30, 0x00, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E},  // U+006A (j)
    {0x07, 0x06, 0x66, 0x36, 0x1E, 0x36, 0x67, 0x00},  // U+006B (k)
    {0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00},  // U+006C (l)
    {0x00, 0x00, 0x33, 0x7F, 0x7F, 0x6B, 0x63, 0x00},  // U+006D (m)
    {0x00, 0x00, 0x1F, 0x33, 0x33, 0x33, 0x33, 0x00},  // U+006E (n)
    {0x00, 0x00, 0x1E, 0x33, 0x33, 0x33, 0x1E, 0x00},  // U+006F (o)
    {0x00, 0x00, 0x3B, 0x66, 0x66, 0x3E, 0x06, 0x0F},  // U+0070 (p)
    {0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x78},  // U+0071 (q)
    {0x00, 0x00, 0x3B, 0x6E, 0x66, 0x06, 0x0F, 0x00},  // U+0072 (r)
    {0x00, 0x00, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x00},  // U+0073 (s)
    {0x08, 0x0C, 0x3E, 0x0C, 0x0C, 0x2C, 0x18, 0x00},  // U+0074 (t)
    {0x00, 0x00, 0x33, 0x33, 0x33, 0x33, 0x6E, 0x00},  // U+0075 (u)
    {0x00, 0x00, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00},  // U+0076 (v)
    {0x00, 0x00, 0x63, 0x6B, 0x7F, 0x7F, 0x36, 0x00},  // U+0077 (w)
    {0x00, 0x00, 0x63, 0x36, 0x1C, 0x36, 0x63, 0x00},  // U+0078 (x)
    {0x00, 0x00, 0x33, 0x33, 0x33, 0x3E, 0x30, 0x1F},  // U+0079 (y)
    {0x00, 0x00, 0x3F, 0x19, 0x0C, 0x26, 0x3F, 0x00},  // U+007A (z)
    {0x38, 0x0C, 0x0C, 0x07, 0x0C, 0x0C, 0x38, 0x00},  // U+007B ({)
    {0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00},  // U+007C (|)
    {0x07, 0x0C, 0x0C, 0x38, 0x0C, 0x0C, 0x07, 0x00},  // U+007D (})
    {0x6E, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // U+007E (~)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}   // U+007F
};

#define NUM_BITMAP_FIRE 44
const uint16_t FIRE[NUM_BITMAP_FIRE][16] = {
    {21089, 23041, 1933, 840, 30241, 32386, 26113, 708, 1932, 1938, 2927, 1978,
     3000, 3003, 2972, 4029},
    {20993, 20481, 579, 1973, 21505, 21281, 24961, 20225, 22528, 29697, 1864,
     5056, 5056, 4027, 5024, 3997},
    {20993, 20993, 19457, 22529, 21185, 23041, 31265, 32451, 2920, 22528, 3036,
     2971, 2965, 3036, 4030, 4992},
    {20993, 20993, 20993, 20065, 20929, 22528, 1865, 25152, 774, 1980, 3006,
     2998, 32781, 1970, 3028, 4030},
    {20993, 20993, 20993, 21089, 20225, 1932, 876, 906, 31426, 32648, 3033,
     1979, 4032, 5054, 4030, 4028},
    {20993, 20929, 20993, 20481, 838, 611, 22528, 1934, 1968, 1971, 3037, 1964,
     943, 3034, 1973, 3031},
    {20993, 21025, 23073, 20160, 19232, 32451, 739, 578, 30241, 805, 1972, 3005,
     4031, 947, 2965, 2967},
    {20065, 22113, 21249, 23200, 874, 1980, 1982, 881, 1975, 3005, 1972, 3004,
     3003, 4032, 5024, 4030},
    {20065, 27137, 449, 642, 807, 910, 1936, 808, 772, 841, 3004, 3005, 4030,
     4030, 3998, 3965},
    {20129, 30305, 773, 20481, 708, 1971, 1935, 843, 1976, 1978, 1973, 1979,
     3005, 2974, 4030, 5055},
    {20993, 23073, 20353, 32322, 1900, 22529, 30434, 3002, 1974, 3982, 1933,
     912, 877, 3004, 4031, 3998},
    {21889, 21953, 21217, 32290, 30209, 28161, 26145, 13058, 4934, 1972, 1934,
     842, 1940, 1979, 3004, 3004},
    {22017, 20097, 20929, 23073, 23073, 21121, 22049, 21505, 709, 1938, 1974,
     2964, 1976, 3005, 3004, 1972},
    {23073, 23041, 23041, 20225, 21025, 28161, 1900, 1867, 842, 1949, 2974, 916,
     3002, 4029, 4030, 5023},
    {22977, 21825, 20289, 644, 32387, 32553, 1946, 1942, 1903, 3004, 2941, 1941,
     918, 3999, 6016, 5983},
    {20929, 21953, 20257, 676, 1900, 2969, 845, 1942, 1949, 1937, 2969, 2968,
     4025, 3966, 3935, 4991},
    {18977, 22017, 21953, 21217, 22529, 3982, 3967, 3006, 5024, 2974, 2973,
     5024, 3998, 4991, 4959, 4959},
    {20929, 22049, 22049, 25025, 19777, 22529, 2925, 2855, 1936, 3997, 2968,
     3998, 4992, 5024, 5023, 4991},
    {20929, 20001, 23073, 21025, 19457, 546, 839, 1901, 839, 2965, 2932, 2974,
     2971, 5022, 4028, 3001},
    {20929, 22017, 20257, 676, 774, 1937, 1904, 1906, 1942, 2966, 3000, 4031,
     4028, 3004, 3995, 2971},
    {20993, 21025, 20353, 708, 676, 1902, 1732, 1765, 708, 841, 909, 2993, 5911,
     4926, 3997, 5023},
    {20993, 21089, 21953, 19457, 25985, 24097, 29057, 21377, 31137, 1940, 844,
     27649, 943, 3035, 914, 2972},
    {24065, 21889, 20001, 20225, 32355, 808, 1829, 1938, 1937, 1904, 1937, 709,
     879, 3036, 1943, 2999},
    {19841, 21889, 22977, 22017, 21281, 20481, 21505, 28193, 1797, 841, 1972,
     3006, 4027, 1977, 3004, 2965},
    {20993, 21025, 21953, 21025, 21025, 20993, 21953, 20481, 22529, 807, 874,
     2962, 2970, 3002, 1976, 4063},
    {20993, 21025, 20129, 19457, 19457, 20481, 22529, 31330, 2562, 1897, 1970,
     1970, 1972, 842, 1973, 1971},
    {20993, 20129, 29025, 611, 740, 32386, 1970, 1938, 32289, 876, 1936, 4032,
     3002, 1975, 1971, 2968},
    {20993, 20065, 21953, 25985, 643, 1935, 1977, 2927, 2995, 4060, 3003, 1904,
     5056, 2994, 1971, 3005},
    {20993, 20993, 20129, 28161, 21504, 1899, 610, 22528, 22528, 1936, 842, 875,
     1934, 911, 1970, 3936},
    {20993, 20065, 20225, 30145, 708, 643, 21504, 21344, 19456, 32516, 842,
     1936, 3005, 4030, 2971, 4991},
    {20993, 19233, 22049, 874, 840, 1899, 1897, 840, 840, 845, 874, 1931, 2724,
     2974, 4030, 5023},
    {20065, 22017, 27073, 841, 1902, 1901, 1975, 2959, 1869, 3002, 3000, 2823,
     1941, 4028, 4029, 3998},
    {21089, 18945, 20353, 578, 676, 874, 610, 30721, 2968, 4000, 4032, 4032,
     5024, 4991, 4991, 3966},
    {21025, 20001, 21505, 643, 1899, 740, 675, 1936, 1936, 1936, 3983, 2967,
     2908, 3999, 5019, 2971},
    {20993, 20353, 675, 1897, 1902, 774, 32387, 1935, 1896, 874, 909, 2991,
     2995, 1975, 3004, 2895},
    {20993, 20065, 23937, 21344, 806, 1863, 1933, 878, 29121, 1931, 1973, 3005,
     3040, 2934, 3002, 2968},
    {21025, 21025, 23232, 23041, 19457, 20225, 32354, 32289, 30337, 708, 1897,
     806, 1934, 1938, 3004, 1940},
    {20993, 20097, 23297, 22017, 21504, 740, 23104, 21953, 1899, 1975, 1974,
     1973, 1898, 1936, 3004, 4064},
    {22049, 21249, 28993, 30337, 1937, 1971, 1968, 874, 1977, 3001, 3003, 1969,
     1935, 1934, 1938, 1867},
    {24097, 32450, 676, 806, 1901, 1933, 22528, 875, 4063, 1977, 4029, 4029,
     3002, 1976, 2963, 875},
    {21025, 31329, 708, 806, 1937, 1899, 1975, 1974, 2999, 4064, 3035, 945, 946,
     1976, 3037, 3995},
    {21089, 21505, 24992, 20353, 707, 1936, 843, 878, 873, 1864, 2972, 2966,
     3000, 3004, 3997, 4030},
    {20481, 1895, 874, 24961, 30305, 842, 1896, 809, 806, 1975, 32681, 3036,
     874, 839, 3000, 3998},
    {20481, 32419, 1935, 740, 32289, 32386, 30145, 22528, 1900, 1936, 3986,
     1970, 1974, 1936, 1974, 3001}};


#define NUM_BITMAP_LOGO 16
const uint16_t LOGO[][NUM_BITMAP_LOGO] = {
    {0, 0, 0, 0, 0, 0, 0, 355, 500, 282, 0, 0, 0, 0, 0, 0, },
{0, 0, 0, 0, 500, 500, 500, 500, 500, 500, 500, 500, 145, 0, 0, 0, },
{0, 0, 0, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 0, 0, },
{0, 0, 500, 500, 500, 500, 383, 375, 375, 375, 383, 511, 511, 283, 500, 0, },
{0, 500, 500, 500, 500, 500, 383, 375, 375, 375, 375, 511, 511, 219, 500, 0, },
{0, 500, 428, 283, 500, 500, 383, 375, 375, 375, 375, 511, 511, 219, 500, 500, },
{0, 500, 147, 484, 500, 500, 375, 375, 375, 375, 375, 511, 511, 219, 500, 500, },
{355, 500, 147, 484, 75, 75, 375, 375, 375, 375, 375, 511, 511, 219, 500, 500, },
{500, 500, 147, 484, 475, 475, 139, 139, 139, 139, 139, 511, 511, 219, 500, 500, },
{282, 500, 147, 475, 283, 283, 303, 293, 303, 276, 303, 511, 511, 219, 500, 500, },
{0, 500, 147, 475, 500, 500, 303, 74, 303, 485, 303, 511, 511, 219, 500, 500, },
{0, 500, 500, 500, 500, 500, 303, 74, 303, 485, 303, 511, 511, 219, 500, 500, },
{0, 145, 500, 500, 500, 500, 303, 220, 303, 211, 303, 511, 511, 219, 500, 0, },
{0, 0, 500, 500, 500, 500, 147, 148, 148, 148, 156, 220, 220, 428, 282, 0, },
{0, 0, 0, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 282, 0, 0, },
{0, 0, 0, 0, 0, 500, 500, 500, 500, 500, 500, 500, 0, 0, 0, 0, }
};
#endif
